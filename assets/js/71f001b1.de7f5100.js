"use strict";(self.webpackChunkacps_documentation=self.webpackChunkacps_documentation||[]).push([[2079],{6218:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>T,contentTitle:()=>B,default:()=>D,frontMatter:()=>k,metadata:()=>E,toc:()=>A});var s=i(4848),r=i(8453),l=i(6540),t=i(4164),o=i(3104),a=i(6347),d=i(205),c=i(7485),h=i(1682),u=i(9466);function x(n){return l.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,l.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(n){const{values:e,children:i}=n;return(0,l.useMemo)((()=>{const n=e??function(n){return x(n).map((n=>{let{props:{value:e,label:i,attributes:s,default:r}}=n;return{value:e,label:i,attributes:s,default:r}}))}(i);return function(n){const e=(0,h.X)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,i])}function j(n){let{value:e,tabValues:i}=n;return i.some((n=>n.value===e))}function g(n){let{queryString:e=!1,groupId:i}=n;const s=(0,a.W6)(),r=function(n){let{queryString:e=!1,groupId:i}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:e,groupId:i});return[(0,c.aZ)(r),(0,l.useCallback)((n=>{if(!r)return;const e=new URLSearchParams(s.location.search);e.set(r,n),s.replace({...s.location,search:e.toString()})}),[r,s])]}function b(n){const{defaultValue:e,queryString:i=!1,groupId:s}=n,r=p(n),[t,o]=(0,l.useState)((()=>function(n){let{defaultValue:e,tabValues:i}=n;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!j({value:e,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${i.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=i.find((n=>n.default))??i[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:e,tabValues:r}))),[a,c]=g({queryString:i,groupId:s}),[h,x]=function(n){let{groupId:e}=n;const i=function(n){return n?`docusaurus.tab.${n}`:null}(e),[s,r]=(0,u.Dv)(i);return[s,(0,l.useCallback)((n=>{i&&r.set(n)}),[i,r])]}({groupId:s}),b=(()=>{const n=a??h;return j({value:n,tabValues:r})?n:null})();(0,d.A)((()=>{b&&o(b)}),[b]);return{selectedValue:t,selectValue:(0,l.useCallback)((n=>{if(!j({value:n,tabValues:r}))throw new Error(`Can't select invalid tab value=${n}`);o(n),c(n),x(n)}),[c,x,r]),tabValues:r}}var f=i(2303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(n){let{className:e,block:i,selectedValue:r,selectValue:l,tabValues:a}=n;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),h=n=>{const e=n.currentTarget,i=d.indexOf(e),s=a[i].value;s!==r&&(c(e),l(s))},u=n=>{let e=null;switch(n.key){case"Enter":h(n);break;case"ArrowRight":{const i=d.indexOf(n.currentTarget)+1;e=d[i]??d[0];break}case"ArrowLeft":{const i=d.indexOf(n.currentTarget)-1;e=d[i]??d[d.length-1];break}}e?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":i},e),children:a.map((n=>{let{value:e,label:i,attributes:l}=n;return(0,s.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:n=>d.push(n),onKeyDown:u,onClick:h,...l,className:(0,t.A)("tabs__item",m.tabItem,l?.className,{"tabs__item--active":r===e}),children:i??e},e)}))})}function v(n){let{lazy:e,children:i,selectedValue:r}=n;const t=(Array.isArray(i)?i:[i]).filter(Boolean);if(e){const n=t.find((n=>n.props.value===r));return n?(0,l.cloneElement)(n,{className:"margin-top--md"}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:t.map(((n,e)=>(0,l.cloneElement)(n,{key:e,hidden:n.props.value!==r})))})}function w(n){const e=b(n);return(0,s.jsxs)("div",{className:(0,t.A)("tabs-container",m.tabList),children:[(0,s.jsx)(y,{...n,...e}),(0,s.jsx)(v,{...n,...e})]})}function I(n){const e=(0,f.A)();return(0,s.jsx)(w,{...n,children:x(n.children)},String(e))}const S={tabItem:"tabItem_Ymn6"};function P(n){let{children:e,hidden:i,className:r}=n;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(S.tabItem,r),hidden:i,children:e})}const k={title:"Installation",description:"Automates secure entry management by authorizing or denying access based on RFID scans."},B="Installation",E={id:"tutorial/installation",title:"Installation",description:"Automates secure entry management by authorizing or denying access based on RFID scans.",source:"@site/docs/tutorial/installation.mdx",sourceDirName:"tutorial",slug:"/tutorial/installation",permalink:"/docs/tutorial/installation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Installation",description:"Automates secure entry management by authorizing or denying access based on RFID scans."},sidebar:"tutorialSidebar",next:{title:"Node Code Explained",permalink:"/docs/tutorial/node_code_explained"}},T={},A=[{value:"Arduino IDE Features and Specifications",id:"arduino-ide-features-and-specifications",level:2},{value:"Arduino IDE Installation",id:"arduino-ide-installation",level:2},{value:"Installing Microcontroller Board Managers and Testing with Blink",id:"installing-microcontroller-board-managers-and-testing-with-blink",level:2},{value:"Arduino Nano 33 IoT Setup",id:"arduino-nano-33-iot-setup",level:2},{value:"Installing Arduino Nano 33 IoT in Board Manager",id:"installing-arduino-nano-33-iot-in-board-manager",level:4},{value:"Step-by-Step Installation",id:"step-by-step-installation",level:4},{value:"Testing with Blink",id:"testing-with-blink",level:4},{value:"Arduino MKR WiFi 1010 Setup",id:"arduino-mkr-wifi-1010-setup",level:2},{value:"Step-by-Step Installation",id:"step-by-step-installation-1",level:4},{value:"Testing with Blink",id:"testing-with-blink-1",level:4},{value:"ESP8266 Setup",id:"esp8266-setup",level:2},{value:"Installing ESP8266 Board Manager",id:"installing-esp8266-board-manager",level:4},{value:"Step-by-Step Installation",id:"step-by-step-installation-2",level:4},{value:"Testing with Blink",id:"testing-with-blink-2",level:4},{value:"ESP32 Setup",id:"esp32-setup",level:2},{value:"Installing ESP32 Board Manager",id:"installing-esp32-board-manager",level:4},{value:"Step-by-Step Installation",id:"step-by-step-installation-3",level:4},{value:"Testing with Blink",id:"testing-with-blink-3",level:4},{value:"Raspberry Pi Pico W Setup",id:"raspberry-pi-pico-w-setup",level:2},{value:"Adding the Raspberry Pi Pico Arduino Core",id:"adding-the-raspberry-pi-pico-arduino-core",level:4},{value:"Step-by-Step Installation",id:"step-by-step-installation-4",level:4},{value:"Installing the Board from Boards Manager",id:"installing-the-board-from-boards-manager",level:4},{value:"Teensy 4.1 Setup",id:"teensy-41-setup",level:2},{value:"Install Teensyduino",id:"install-teensyduino",level:4},{value:"Testing with Blink",id:"testing-with-blink-4",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2}];function R(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(e.p,{children:"This section guides you through setting up the Arduino Integrated Development Environment (IDE), which is used for programming the nodes in our Applied Cyber-Physical Systems (ACPS). Arduino IDE is renowned for its simplicity and effectiveness in programming microcontrollers commonly used in cyber-physical systems."}),"\n",(0,s.jsx)(e.h2,{id:"arduino-ide-features-and-specifications",children:"Arduino IDE Features and Specifications"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Cross-Platform"}),": Available for Windows, macOS, and Linux."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"User-Friendly Interface"}),": Easy-to-use interface ideal for beginners and professionals alike."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Extensive Library Support"}),": Provides a vast collection of libraries for various sensors and actuators."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Open Source"}),": Freely available for modification and distribution."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Language"}),": Uses a simplified version of C++, making it accessible to those new to programming."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"arduino-ide-installation",children:"Arduino IDE Installation"}),"\n",(0,s.jsxs)(I,{defaultValue:"windows",values:[{label:"Windows",value:"windows"},{label:"macOS",value:"macos"},{label:"Linux",value:"linux"}],children:[(0,s.jsx)(P,{value:"windows",children:(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Download the Installer"}),": Visit ",(0,s.jsx)(e.a,{href:"https://www.arduino.cc/en/software",children:"Arduino Software Page"})," and download the Windows Installer."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Run the Installer"}),": Open the downloaded ",(0,s.jsx)(e.code,{children:".exe"})," file and follow the on-screen instructions. Choose whether to install USB drivers and other optional components."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Launch Arduino IDE"}),": Complete the installation and open the Arduino IDE to begin programming."]}),"\n"]})}),(0,s.jsx)(P,{value:"macos",children:(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Download the Installer"}),": Go to the ",(0,s.jsx)(e.a,{href:"https://www.arduino.cc/en/software",children:"Arduino Software Page"})," and download the macOS Installer."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Install the Software"}),": Open the ",(0,s.jsx)(e.code,{children:".zip"})," file and drag the Arduino application into your Applications folder."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Verify Installation"}),": Open Arduino from your Applications folder to ensure it's properly installed."]}),"\n"]})}),(0,s.jsx)(P,{value:"linux",children:(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Download the Tarball"}),": Download the appropriate version for your Linux distribution from ",(0,s.jsx)(e.a,{href:"https://www.arduino.cc/en/software",children:"Arduino Software Page"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Extract and Install"}),": Extract the tarball and run the ",(0,s.jsx)(e.code,{children:"install.sh"})," script from the terminal to install the IDE."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Permissions"}),": You may need to set serial port permissions. Use ",(0,s.jsx)(e.code,{children:"sudo usermod -a -G dialout $USER"})," and restart your computer."]}),"\n"]})})]}),"\n",(0,s.jsx)(e.h2,{id:"installing-microcontroller-board-managers-and-testing-with-blink",children:"Installing Microcontroller Board Managers and Testing with Blink"}),"\n",(0,s.jsx)(e.p,{children:"This section provides detailed instructions for setting up each of the six microcontrollers used in our project, including installing the board manager for each and testing connectivity and configuration by uploading the Blink sketch."}),"\n",(0,s.jsx)(e.h2,{id:"arduino-nano-33-iot-setup",children:"Arduino Nano 33 IoT Setup"}),"\n",(0,s.jsx)(e.h4,{id:"installing-arduino-nano-33-iot-in-board-manager",children:"Installing Arduino Nano 33 IoT in Board Manager"}),"\n",(0,s.jsx)(e.p,{children:"Arduino provides official support for the Nano 33 IoT through the Arduino Boards Manager."}),"\n",(0,s.jsx)(e.h4,{id:"step-by-step-installation",children:"Step-by-Step Installation"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Open Boards Manager"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Navigate to ",(0,s.jsx)(e.code,{children:"Tools > Board > Boards Manager"})," in the Arduino IDE."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Search and Install"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:'Type "Arduino Nano 33 IoT" in the search bar, select it, and click "Install".'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"testing-with-blink",children:"Testing with Blink"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Load the Blink Sketch"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Go to ",(0,s.jsx)(e.code,{children:"File > Examples > 01.Basics > Blink"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Select Arduino Nano 33 IoT"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Choose ",(0,s.jsx)(e.code,{children:"Arduino Nano 33 IoT"})," from ",(0,s.jsx)(e.code,{children:"Tools > Board"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Select the Port"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Connect your Nano 33 IoT to the computer and choose the appropriate port under ",(0,s.jsx)(e.code,{children:"Tools > Port"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Upload the Program"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Click the upload button and ensure the LED blinks to check functionality."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"arduino-mkr-wifi-1010-setup",children:"Arduino MKR WiFi 1010 Setup"}),"\n",(0,s.jsx)(e.p,{children:"The Arduino MKR WiFi 1010 board is supported directly by Arduino through its board manager."}),"\n",(0,s.jsx)(e.h4,{id:"step-by-step-installation-1",children:"Step-by-Step Installation"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Access Boards Manager"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Go to ",(0,s.jsx)(e.code,{children:"Tools > Board > Boards Manager"}),' and enter "Arduino MKR WiFi 1010" in the search box.']}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Install the Board"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:'Find the Arduino MKR WiFi 1010 entry, select it, and click "Install".'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"testing-with-blink-1",children:"Testing with Blink"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Load the Blink Sketch"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Select ",(0,s.jsx)(e.code,{children:"File > Examples > 01.Basics > Blink"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Choose MKR WiFi 1010"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Set ",(0,s.jsx)(e.code,{children:"Arduino MKR WiFi 1010"})," as the board under ",(0,s.jsx)(e.code,{children:"Tools > Board"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Select the Port"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Plug in your Arduino MKR WiFi 1010 and select the corresponding port under ",(0,s.jsx)(e.code,{children:"Tools > Port"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Upload the Program"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Hit the upload button and verify that the onboard LED starts to blink."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"esp8266-setup",children:"ESP8266 Setup"}),"\n",(0,s.jsx)(e.h4,{id:"installing-esp8266-board-manager",children:"Installing ESP8266 Board Manager"}),"\n",(0,s.jsx)(e.p,{children:"The ESP8266 community maintains an Arduino core that can be installed through the Boards Manager."}),"\n",(0,s.jsx)(e.h4,{id:"step-by-step-installation-2",children:"Step-by-Step Installation"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Add Board Manager URL"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Go to ",(0,s.jsx)(e.code,{children:"File > Preferences"}),' in the Arduino IDE and add the following URL to the "Additional Boards Manager URLs":',"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"http://arduino.esp8266.com/stable/package_esp8266com_index.json\n"})}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"If there are already URLs present, click on the icon on the right of the box to open a text window that allows you to add multiple URLs, one per line."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Open Boards Manager"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Navigate to ",(0,s.jsx)(e.code,{children:"Tools > Board > Boards Manager..."}),', search for "ESP8266", and click "Install".']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"testing-with-blink-2",children:"Testing with Blink"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Load the Blink Sketch"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Open ",(0,s.jsx)(e.code,{children:"File > Examples > 01.Basics > Blink"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Select Your ESP8266 Board"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Choose your specific ESP8266 model from ",(0,s.jsx)(e.code,{children:"Tools > Board"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Select the Port"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Connect your ESP8266 to the computer and select the port it's connected to under ",(0,s.jsx)(e.code,{children:"Tools > Port"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Upload the Program"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Click the upload button and watch for the LED to blink, confirming that the board is working correctly."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"esp32-setup",children:"ESP32 Setup"}),"\n",(0,s.jsx)(e.h4,{id:"installing-esp32-board-manager",children:"Installing ESP32 Board Manager"}),"\n",(0,s.jsx)(e.p,{children:"The ESP32 Arduino core is supported by its community and requires adding a custom board manager URL."}),"\n",(0,s.jsx)(e.h4,{id:"step-by-step-installation-3",children:"Step-by-Step Installation"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Add Board Manager URL"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["In the Arduino IDE, go to ",(0,s.jsx)(e.code,{children:"File > Preferences"}),' and insert this URL into "Additional Boards Manager URLs":',"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"https://dl.espressif.com/dl/package_esp32_index.json\n"})}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"If there are already URLs present, click on the icon on the right of the box to open a text window that allows you to add multiple URLs, one per line."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Install the ESP32 Board"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Open ",(0,s.jsx)(e.code,{children:"Tools > Board > Boards Manager"}),', type "ESP32" in the search bar, select it, and click "Install".']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"testing-with-blink-3",children:"Testing with Blink"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Load the Blink Sketch"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Navigate to ",(0,s.jsx)(e.code,{children:"File > Examples > 01.Basics > Blink"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Select the ESP32 Board"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["From ",(0,s.jsx)(e.code,{children:"Tools > Board"}),', select "ESP32 Dev Module".']}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Select the Port"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Connect your ESP32 to your computer and choose the correct port under ",(0,s.jsx)(e.code,{children:"Tools > Port"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Upload the Program"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Press the upload button. Ensure that the onboard LED blinks to indicate it's working correctly."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.admonition,{title:"Windows Port Detection Issue",type:"info",children:[(0,s.jsx)(e.p,{children:"If you are using Windows and cannot find the ESP32 port, the driver may not be installed. To install the driver:"}),(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Connect your ESP32 to your PC."}),"\n",(0,s.jsxs)(e.li,{children:["Open ",(0,s.jsx)(e.strong,{children:"Windows Update"})," settings."]}),"\n",(0,s.jsxs)(e.li,{children:["Click on ",(0,s.jsx)(e.strong,{children:"Advanced options"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:["Navigate to ",(0,s.jsx)(e.strong,{children:"Optional updates"}),"."]}),"\n",(0,s.jsx)(e.li,{children:"Look for the ESP32 driver in the list and select it for installation.\r\nThis should resolve any port detection issues with the ESP32 on Windows."}),"\n"]})]}),"\n",(0,s.jsx)(e.h2,{id:"raspberry-pi-pico-w-setup",children:"Raspberry Pi Pico W Setup"}),"\n",(0,s.jsx)(e.h4,{id:"adding-the-raspberry-pi-pico-arduino-core",children:"Adding the Raspberry Pi Pico Arduino Core"}),"\n",(0,s.jsx)(e.p,{children:"The Raspberry Pi Pico Arduino core is actively maintained by Earle F. Philhower and supports not only the original Pico and the Pico W but also nearly all RP2040-based boards. This core is frequently updated, ensuring compatibility and enhanced features for your development."}),"\n",(0,s.jsx)(e.h4,{id:"step-by-step-installation-4",children:"Step-by-Step Installation"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Open Arduino IDE"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Launch your Arduino IDE to start the setup process."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Access Preferences"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Click on the ",(0,s.jsx)(e.code,{children:"File"})," menu at the top of the IDE and select ",(0,s.jsx)(e.code,{children:"Preferences"}),". This will open the Preferences dialog box."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Add Board Manager URL"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:'Within the Preferences dialog box, locate the "Additional Boards Manager URLs" text box.'}),"\n",(0,s.jsx)(e.li,{children:"If there are already URLs present, click on the icon on the right of the box to open a text window that allows you to add multiple URLs, one per line."}),"\n",(0,s.jsxs)(e.li,{children:["Add the following URL for the Raspberry Pi Pico core:","\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Save Preferences"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Click ",(0,s.jsx)(e.code,{children:"OK"})," to save your changes and close the Preferences dialog."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"installing-the-board-from-boards-manager",children:"Installing the Board from Boards Manager"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Open Boards Manager"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Navigate to ",(0,s.jsx)(e.code,{children:"Tools > Board > Boards Manager..."})," from the Arduino IDE menu. This opens the Boards Manager window."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Search for Pico Boards"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["In the Boards Manager, type ",(0,s.jsx)(e.code,{children:"Pico"})," into the search bar. You will see several entries for RP2040 boards."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Install the Raspberry Pi Pico/RP2040 Board"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Find the entry labeled ",(0,s.jsx)(e.code,{children:"Raspberry Pi Pico/RP2040"})," by Earle Philhower."]}),"\n",(0,s.jsxs)(e.li,{children:["Click ",(0,s.jsx)(e.code,{children:"Install"})," to add this board to your Arduino IDE. The installation may take a minute as it downloads and installs the files."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Completion"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Once the installation is complete, you are ready to start using the Raspberry Pi Pico or Pico W with your Arduino IDE."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.admonition,{type:"info",children:(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Note:"})," Installing the board this way ensures that you have the latest support for the Raspberry Pi Pico and other RP2040-based boards, allowing you to leverage the full capabilities of the microcontroller."]})}),"\n",(0,s.jsx)(e.h2,{id:"teensy-41-setup",children:"Teensy 4.1 Setup"}),"\n",(0,s.jsx)(e.h4,{id:"install-teensyduino",children:"Install Teensyduino"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Download and install Teensyduino"}),": Visit the ",(0,s.jsx)(e.a,{href:"https://www.pjrc.com/teensy/td_download.html",children:"Teensyduino Software page"}),", which adds support for Teensy boards to the Arduino IDE.","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"If there are already URLs present, click on the icon on the right of the box to open a text window that allows you to add multiple URLs, one per line."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"testing-with-blink-4",children:"Testing with Blink"}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Load the Blink Sketch"}),": Navigate to ",(0,s.jsx)(e.code,{children:"File > Examples > 01.Basics > Blink"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Select Teensy 4.1"}),": From ",(0,s.jsx)(e.code,{children:"Tools > Board"}),", select ",(0,s.jsx)(e.code,{children:"Teensy 4.1"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Select the Port"}),": Choose the COM port connected to your Teensy 4.1 from ",(0,s.jsx)(e.code,{children:"Tools > Port"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Upload the Program"}),": Press the upload button. Ensure the onboard LED starts blinking."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(e.p,{children:"If you encounter issues during installation or testing:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Ensure the correct board and port are selected"}),": Always double-check the board and port settings under the ",(0,s.jsx)(e.code,{children:"Tools"})," menu."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Check connections"}),": Verify that your microcontroller is properly connected to your computer and the board is powered on."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Reinstall drivers if needed"}),": Especially for Windows, ensure that all necessary drivers are installed and up to date."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Refer to official docs"}),": Consult the official documentation for each board for specific troubleshooting steps."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"This comprehensive guide should help you successfully set up each microcontroller with the Arduino IDE, prepare them for programming, and verify their functionality through a simple Blink test."})]})}function D(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(R,{...n})}):R(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>o});var s=i(6540);const r={},l=s.createContext(r);function t(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);