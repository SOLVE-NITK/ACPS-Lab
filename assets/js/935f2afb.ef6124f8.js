"use strict";(self.webpackChunkacps_documentation=self.webpackChunkacps_documentation||[]).push([[8581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Introduction","href":"/ACPS-Lab/docs/introduction","docId":"intro","unlisted":false},{"type":"link","label":"System Architecture","href":"/ACPS-Lab/docs/system_architecture","docId":"system_architecture","unlisted":false},{"type":"category","label":"Physical Components","collapsed":true,"items":[{"type":"link","label":"General Node Arcitecture","href":"/ACPS-Lab/docs/physical_components/general_node_architecture","docId":"physical_components/general_node_architecture","unlisted":false},{"type":"link","label":"Node 1: Access Control System","href":"/ACPS-Lab/docs/physical_components/node1","docId":"physical_components/node1","unlisted":false},{"type":"link","label":"Node 2: Contactless Thermometer","href":"/ACPS-Lab/docs/physical_components/node2","docId":"physical_components/node2","unlisted":false},{"type":"link","label":"Node 3: Energy Management System","href":"/ACPS-Lab/docs/physical_components/node3","docId":"physical_components/node3","unlisted":false},{"type":"link","label":"Node 4: Fire and Smoke Detector","href":"/ACPS-Lab/docs/physical_components/node4","docId":"physical_components/node4","unlisted":false},{"type":"link","label":"Node 5: Light Intensity, Loud Noise and Color Detector","href":"/ACPS-Lab/docs/physical_components/node5","docId":"physical_components/node5","unlisted":false},{"type":"link","label":"Node 6: Local Weather Station","href":"/ACPS-Lab/docs/physical_components/node6","docId":"physical_components/node6","unlisted":false},{"type":"link","label":"Node 7: Motion Detector","href":"/ACPS-Lab/docs/physical_components/node7","docId":"physical_components/node7","unlisted":false},{"type":"link","label":"Node 8: Obstacle Detector","href":"/ACPS-Lab/docs/physical_components/node8","docId":"physical_components/node8","unlisted":false},{"type":"link","label":"Node 9: Orientation Visualizer, Free Fall, and Crash Detector","href":"/ACPS-Lab/docs/physical_components/node9","docId":"physical_components/node9","unlisted":false},{"type":"link","label":"Node 10: Temperature Control System","href":"/ACPS-Lab/docs/physical_components/node10","docId":"physical_components/node10","unlisted":false},{"type":"link","label":"Node 11: Vibration and Shock Detector","href":"/ACPS-Lab/docs/physical_components/node11","docId":"physical_components/node11","unlisted":false},{"type":"link","label":"Node 12: Voice-Based Assistant","href":"/ACPS-Lab/docs/physical_components/node12","docId":"physical_components/node12","unlisted":false}],"collapsible":true,"href":"/ACPS-Lab/docs/category/physical-components"},{"type":"category","label":"Cyber Components","items":[{"type":"link","label":"Outline","href":"/ACPS-Lab/docs/cyber_components/outline","docId":"cyber_components/outline","unlisted":false},{"type":"link","label":"ThingBoard Platform Basics","href":"/ACPS-Lab/docs/cyber_components/thingsboard_platform","docId":"cyber_components/thingsboard_platform","unlisted":false},{"type":"link","label":"ThingsBoard Data Visualization","href":"/ACPS-Lab/docs/cyber_components/thingsboard_data_visualization","docId":"cyber_components/thingsboard_data_visualization","unlisted":false},{"type":"link","label":"Device Connectivity, Client-side and Server-side Application Development using ThingsBoard API","href":"/ACPS-Lab/docs/cyber_components/device_connectivity_application_dev","docId":"cyber_components/device_connectivity_application_dev","unlisted":false},{"type":"link","label":"Raspberry Pi, a Single Board Computer, for ThingsBoard Deployment","href":"/ACPS-Lab/docs/cyber_components/rpi","docId":"cyber_components/rpi","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/ACPS-Lab/docs/category/cyber-components"},{"type":"category","label":"Communication Components","items":[{"type":"link","label":"Overview","href":"/ACPS-Lab/docs/communication_components/overview","docId":"communication_components/overview","unlisted":false},{"type":"link","label":"Wired Communication Protocols","href":"/ACPS-Lab/docs/communication_components/wired_communication_protocols","docId":"communication_components/wired_communication_protocols","unlisted":false},{"type":"link","label":"Wireless Communication Protocols","href":"/ACPS-Lab/docs/communication_components/wireless_communication_protocols","docId":"communication_components/wireless_communication_protocols","unlisted":false},{"type":"link","label":"Software Communication Protocols","href":"/ACPS-Lab/docs/communication_components/software_communication_protocols","docId":"communication_components/software_communication_protocols","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/ACPS-Lab/docs/category/communication-components"}],"tutorialSidebar":[{"type":"link","label":"Installation","href":"/ACPS-Lab/docs/tutorial/installation","docId":"tutorial/installation","unlisted":false},{"type":"link","label":"Node Code Explained","href":"/ACPS-Lab/docs/tutorial/node_code_explained","docId":"tutorial/node_code_explained","unlisted":false},{"type":"link","label":"ThingsBoard","href":"/ACPS-Lab/docs/tutorial/thingsboard","docId":"tutorial/thingsboard","unlisted":false},{"type":"link","label":"Experimentations and Demonstartions","href":"/ACPS-Lab/docs/tutorial/experimental_setups","docId":"tutorial/experimental_setups","unlisted":false}]},"docs":{"communication_components/overview":{"id":"communication_components/overview","title":"Overview","description":"Summarizes the essential role of communication protocols in ACPS, highlighting their importance for system integration and efficiency.","sidebar":"docs"},"communication_components/software_communication_protocols":{"id":"communication_components/software_communication_protocols","title":"Software Communication Protocols","description":"Covers the implementation of software protocols like MQTT for messaging, HTTP for data fetching, and UDP for real-time data transmission, emphasizing their impact on system functionality.","sidebar":"docs"},"communication_components/wired_communication_protocols":{"id":"communication_components/wired_communication_protocols","title":"Wired Communication Protocols","description":"Details the specific wired communication protocols used, such as I2C, SPI, and UART, explaining their implementation and benefits within node-level communications","sidebar":"docs"},"communication_components/wireless_communication_protocols":{"id":"communication_components/wireless_communication_protocols","title":"Wireless Communication Protocols","description":"Describes the integration of WiFi within microcontrollers, facilitating wireless connectivity to edge devices and enhancing network flexibility.","sidebar":"docs"},"cyber_components/device_connectivity_application_dev":{"id":"cyber_components/device_connectivity_application_dev","title":"Device Connectivity, Client-side and Server-side Application Development using ThingsBoard API","description":"Explains how to connect devices to ThingsBoard and develop client-seide and server side applications and integrating them with the system.","sidebar":"docs"},"cyber_components/outline":{"id":"cyber_components/outline","title":"Outline","description":"Provides a quick overview of the cyber component\'s function and the goals of the documentation.","sidebar":"docs"},"cyber_components/rpi":{"id":"cyber_components/rpi","title":"Raspberry Pi, a Single Board Computer, for ThingsBoard Deployment","description":"Brief on ThingsBoard Diployment on Raspberry Pi","sidebar":"docs"},"cyber_components/thingsboard_data_visualization":{"id":"cyber_components/thingsboard_data_visualization","title":"ThingsBoard Data Visualization","description":"Explains how to integrate and manage IoT devices with ThingsBoard and develop applications to utilize the collected data.","sidebar":"docs"},"cyber_components/thingsboard_platform":{"id":"cyber_components/thingsboard_platform","title":"ThingBoard Platform Basics","description":"Introduces ThingsBoard, outlining its key features and applications within the project.","sidebar":"docs"},"intro":{"id":"intro","title":"Introduction","description":"At the intersection of the physical world and digital computation lies a transformative technology known as Cyber-Physical Systems (CPS). These systems embody the essence of innovation in modern societies, serving as the backbone of infrastructure and services that are crucial to our daily lives.","sidebar":"docs"},"physical_components/general_node_architecture":{"id":"physical_components/general_node_architecture","title":"General Node Arcitecture","description":"Each ACPS node features sensors, actuators, and a microcontroller to execute specific tasks and communicate data through IoT for effective monitoring and control.","sidebar":"docs"},"physical_components/node1":{"id":"physical_components/node1","title":"Node 1: Access Control System","description":"Automates secure entry management by authorizing or denying access based on RFID scans.","sidebar":"docs"},"physical_components/node10":{"id":"physical_components/node10","title":"Node 10: Temperature Control System","description":"Manages and regulates environmental temperatures to maintain specific conditions in sensitive areas.","sidebar":"docs"},"physical_components/node11":{"id":"physical_components/node11","title":"Node 11: Vibration and Shock Detector","description":"Monitors vibrations and shocks to foresee and prevent potential damage in industrial settings.","sidebar":"docs"},"physical_components/node12":{"id":"physical_components/node12","title":"Node 12: Voice-Based Assistant","description":"Facilitates voice-activated control of devices, enhancing user interaction and accessibility in smart environments.","sidebar":"docs"},"physical_components/node2":{"id":"physical_components/node2","title":"Node 2: Contactless Thermometer","description":"Provides non-invasive, real-time temperature readings for health monitoring in public and medical settings.","sidebar":"docs"},"physical_components/node3":{"id":"physical_components/node3","title":"Node 3: Energy Management System","description":"Monitors and controls energy consumption to optimize efficiency and reduce operational costs in buildings.","sidebar":"docs"},"physical_components/node4":{"id":"physical_components/node4","title":"Node 4: Fire and Smoke Detector","description":"Detects and alerts the presence of fire and smoke, enhancing safety protocols in residential and commercial spaces.","sidebar":"docs"},"physical_components/node5":{"id":"physical_components/node5","title":"Node 5: Light Intensity, Loud Noise and Color Detector","description":"Monitors environmental light, sound, and color, adjusting system responses for optimal ambiance control.","sidebar":"docs"},"physical_components/node6":{"id":"physical_components/node6","title":"Node 6: Local Weather Station","description":"Collects and displays local weather data, aiding in community weather tracking and environmental education.","sidebar":"docs"},"physical_components/node7":{"id":"physical_components/node7","title":"Node 7: Motion Detector","description":"Enhances security by detecting and alerting to motion within its vicinity, suitable for homes and commercial spaces.","sidebar":"docs"},"physical_components/node8":{"id":"physical_components/node8","title":"Node 8: Obstacle Detector","description":"Employs ultrasonic sensing to detect and alert to obstacles, critical for robotic and autonomous vehicle navigation.","sidebar":"docs"},"physical_components/node9":{"id":"physical_components/node9","title":"Node 9: Orientation Visualizer, Free Fall, and Crash Detector","description":"Tracks device orientation and detects falls or crashes, important for automotive and mobile device safety.","sidebar":"docs"},"system_architecture":{"id":"system_architecture","title":"System Architecture","description":"Schematic Overview","sidebar":"docs"},"tutorial/experimental_setups":{"id":"tutorial/experimental_setups","title":"Experimentations and Demonstartions","description":"","sidebar":"tutorialSidebar"},"tutorial/installation":{"id":"tutorial/installation","title":"Installation","description":"Automates secure entry management by authorizing or denying access based on RFID scans.","sidebar":"tutorialSidebar"},"tutorial/node_code_explained":{"id":"tutorial/node_code_explained","title":"Node Code Explained","description":"","sidebar":"tutorialSidebar"},"tutorial/thingsboard":{"id":"tutorial/thingsboard","title":"ThingsBoard","description":"","sidebar":"tutorialSidebar"}}}')}}]);